# Production Environment Configuration
spring.profiles.active=production

# Server Configuration
server.port=8080
server.servlet.context-path=/

# Database Configuration (PostgreSQL - Supabase)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://db.jhfjigeuxrxxbbsoflcd.supabase.co:5432/postgres}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:Data2501}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.defer-datasource-initialization=false
spring.sql.init.mode=never
spring.jpa.properties.hibernate.hbm2ddl.auto=none

# OpenAI Configuration
openai.api.key=${OPENAI_API_KEY}
openai.api.url=https://api.openai.com/v1

# Supabase Configuration
supabase.url=${SUPABASE_URL:https://jhfjigeuxrxxbbsoflcd.supabase.co}
supabase.anon.key=${SUPABASE_ANON_KEY}
supabase.storage.bucket=${SUPABASE_STORAGE_BUCKET:documents}

# WebSocket Configuration
websocket.allowed-origins=*

# Logging Configuration
logging.level.root=INFO
logging.level.com.hanabank=INFO
logging.level.org.springframework.web=INFO

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# CORS Configuration - 프로덕션 환경에서 localhost:3000 허용
cors.allowed-origins=http://localhost:3000,http://localhost:3001,https://hana-frontend-production.up.railway.app
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

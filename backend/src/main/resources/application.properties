# Server Configuration
server.port=${PORT:8080}
server.servlet.context-path=/api
server.address=0.0.0.0

# Database Configuration (PostgreSQL - Supabase Connection Pooler)
spring.datasource.url=jdbc:postgresql://aws-1-ap-northeast-2.pooler.supabase.com:6543/postgres?sslmode=prefer
spring.datasource.username=postgres.jhfjigeuxrxxbbsoflcd
spring.datasource.password=rlaehdgml1!
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP Configuration - PostgreSQL 연결 풀 최적화
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=3
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.connection-test-query=SELECT 1

# PostgreSQL 특화 설정 - prepared statement 충돌 방지
spring.datasource.hikari.data-source-properties.reWriteBatchedInserts=true
spring.datasource.hikari.data-source-properties.cachePrepStmts=false
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=0
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=0
spring.datasource.hikari.data-source-properties.useServerPrepStmts=false

# JPA Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=false
spring.sql.init.mode=never
spring.jpa.properties.hibernate.hbm2ddl.auto=none
spring.jpa.properties.hibernate.hbm2ddl.schema_generation.drop_source=none
spring.jpa.properties.hibernate.hbm2ddl.schema_generation.create_source=none

# Hibernate 설정 최적화
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true



# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# CORS Configuration - 로컬 개발 환경만 허용
cors.allowed.origins=http://localhost:3000
cors.allowed.methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed.headers=*
cors.allow.credentials=true

# JWT Configuration
jwt.secret=hana_bank_smart_consulting_jwt_secret_key_2024
jwt.expiration=86400000

# Logging Configuration
logging.level.com.hanabank.smartconsulting=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.socket=DEBUG
logging.level.org.springframework.messaging=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# WebSocket Configuration - 로컬 개발 환경만 허용
websocket.allowed.origins=http://localhost:3000

# OpenAI Configuration
openai.api.key=${OPENAI_API_KEY:your-openai-api-key-here}
openai.api.url=https://api.openai.com/v1

# Supabase Configuration
supabase.url=${SUPABASE_URL:https://jhfjigeuxrxxbbsoflcd.supabase.co}
supabase.anon.key=${SUPABASE_ANON_KEY:your-supabase-anon-key-here}
supabase.storage.bucket=${SUPABASE_STORAGE_BUCKET:documents}
